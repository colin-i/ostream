


format elfobj

include "../_include/include.h"

import "mp3_output" mp3_output
#import "mp3_allsize" mp3_allsize
import "mp3_output_size" mp3_output_size
import "mp3_output_pos" mp3_output_pos

import "shl" shl

function mp3_bs_write(sd value,sd len)
	if len!=0 #there are cases, and to ignore them must while len>0 and dec len, if wanting to keep [0,32] else can work another way at [0,31] like [1,32]
		sd size
		setcall size mp3_output_size((value_get))
#    sd allsize
#    setcall allsize mp3_allsize((value_get))
		sd pos
		setcall pos mp3_output_pos((value_get))
		ss mem
		setcall mem mp3_output((value_get))
		add mem size
		dec len
		sd test=1
		setcall test shl(test,len)
		sd p;set p mem
		while test!=0
#       if size>=allsize #will be less or equal allsize
#          call mp3_output_size((value_set),size)
#            call mp3_output_pos((value_set),pos)
#            return 0
#        endif
			sd t;set t test
			and t value
			if t!=0
				or mem# pos
			else
				xor pos -1
				and mem# pos
				xor pos -1
			endelse
			if pos=1
				inc mem
				set pos 0x80
			else
				shr1 pos
			end
			shr1 test
		endwhile
		sub mem p
		add size mem
		call mp3_output_size((value_set),size)
		call mp3_output_pos((value_set),pos)
	end
endfunction
